set shell := ['/bin/bash', '-cu']
container_name := "icos-devops"
snapshot_name := "icos-devops-updated"
vault_password_file := "$HOME/.vault_password"
passwords_file := "$HOME/stuff/icos/dev_passwords.yml"

# TODO: Make variables configurable
# repository_source := "local"
repository_source := "remote"

local_repository_path := "$HOME/stuff/icos/infrastructure"

# For remote fetching
private_key_file := "$HOME/.ssh/icos"
branch := "valter/dev"


# List available commands as default action
@_default:
    just --list --unsorted --justfile {{justfile()}}


fresh: reset-vm run-playbooks

run-playbooks:
  lxc file push ./scripts/run_playbooks.sh {{container_name}}/root/
  lxc exec {{container_name}} -- bash run_playbooks.sh

reset-vm: destroy-vm create-vm

create-vm: launch-vm wait init-vm

destroy-vm:
  lxc delete --force {{container_name}}

enter-vm:
  lxc exec {{container_name}} -- bash -c "source py_env/bin/activate && bash"

start-vm:
  lxc start {{container_name}}

stop-vm:
  lxc stop {{container_name}}
  
launch-vm:
  lxc launch ubuntu:24.04 {{container_name}}
  lxc config set {{container_name}} security.nesting=true
  lxc file push ./scripts/setup_vm.sh {{container_name}}/root/setup_vm.sh
  lxc exec {{container_name}} -- bash setup_vm.sh
  lxc stop {{container_name}}
  lxc snapshot {{container_name}} {{snapshot_name}}
  lxc start {{container_name}}

init-vm:
    #!/usr/bin/env bash
    set -e
    echo "Stopping container"
    lxc stop {{container_name}}
    echo "Restoring snapshot"
    lxc restore {{container_name}} {{snapshot_name}}
    echo "Starting container"
    lxc start {{container_name}}
    echo "Waiting for a bit..."
    sleep 1
    case "{{repository_source}}" in
        (local)
            lxc config device add icos-devops-vm shared-infra-repo disk source={{local_repository_path}} path=/root/infrastructure
            ;;
        (remote)
            lxc file push {{private_key_file}} {{container_name}}/root/.ssh/id_rsa
            lxc exec {{container_name}} -- git clone git@github.com:ICOS-Carbon-Portal/infrastructure.git
            lxc exec {{container_name}} -- bash -c "cd infrastructure && git checkout {{branch}}"
            ;;
        *) echo "Error: repository_source must be local or remote" && exit 1
    esac

    lxc file push {{passwords_file}} {{container_name}}/root/infrastructure/devops/dev.inventory/group_vars/core_host/passwords.yml
    lxc file push {{vault_password_file}} {{container_name}}/root/

# TODO: Wait for VM to be available, and have internet connection, instead of sleep...
wait:
  sleep 1
