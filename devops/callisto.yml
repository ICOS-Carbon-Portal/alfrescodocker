# Deploy eurocom website
#   deploy callisto eurocom
#
# Deploy a new filedrop jar file
#  deploy callisto filedrop -lcallisto -efiledrop_jar_file=/tmp/filedrop.jar
#
# Deploy filedrop website
#  deploy callisto filedrop -lcallisto_host

- hosts: callisto_host
  vars:
    filedrop_domain: filedrop.icos-cp.eu
    callisto_ip: "{{ _lxd.addresses.eth0 | first }}"
  vars_files:
    - vault.yml
  pre_tasks:
    - name: Create storage for docker
      tags: zfs
      import_role:
        name: icos.zfsdocker
      vars:
        zfsdocker_name: callisto
        zfsdocker_size: "50G"

    - name: Create the callisto container
      tags:
        - lxd
        - forward
      lxd_container:
        name: callisto
        state: started
        profiles:
          - default
          - ssh_root
        source:
          type: image
          mode: pull
          server: https://cloud-images.ubuntu.com/releases
          protocol: simplestreams
          alias: "20.04"
        devices:
          root:
            path: "/"
            pool: "default"
            type: "disk"
            size: "500GB"
          docker:
            path: /var/lib/docker
            source: "{{ zfsdocker_zvol }}"
            type: disk
            raw.mount.options: user_subvol_rm_allowed
          data:
            path: /data
            source: /data
            type: disk
            recursive: "yes"
          stilt:
            path: "/ute/stilt"
            source: "/pool/ute/stilt"
            type: disk
          eurocom:
            path: "/ute/eurocom"
            source: "/data/project/eurocom"
            type: disk
          eurocom_web_root:
            path: "/ute/eurocom_web_root"
            source: "/pool/ute/eurocom_web_root"
            type: disk
          filedrop:
            path: "/ute/filedrop"
            source: "/pool/ute/filedrop"
            type: disk
        config:
          security.nesting: "true"
        wait_for_ipv4_addresses: true
        wait_for_ipv4_interfaces: eth0
        timeout: 60
      register: _lxd

  roles:
    - role: icos.lxd_forward
      tags: forward
      lxd_forward_name: callisto
      lxd_forward_ip: "{{ callisto_ip }}"

    - role: icos.eurocom
      tags: eurocom
      eurocom_users: "{{ vault_eurocom_users }}"
      eurocom_web_root: /pool/ute/eurocom_web_root
      eurocom_data_home: /data/project/eurocom

    - role: icos.certbot2
      tags:
        - cert
        - filedrop
      certbot_domain: "{{ filedrop_domain }}"

    - role: icos.nginxsite
      tags: filedrop
      nginxsite_name: filedrop
      nginxsite_file: roles/icos.filedrop/templates/filedrop.conf
      filedrop_addr: "http://callisto.lxd:8039"


- hosts: callisto
  vars:
    sftp_home: /ute/sftp_home
  vars_files:
    - vault.yml
  roles:
    - role: icos.lxd_guest
      tags: guest

    - role: icos.docker
      tags: docker

    - role: icos.superuser
      tags: users
      superuser_list: "{{ vault_callisto_superusers }}"
      superuser_disable_coredump: true

    - role: icos.filedrop
      tags: filedrop
      filedrop_data_home: /ute/filedrop

  tasks:
    - name: Port forward for filedrop
      tags: iptables
      iptables_raw:
        name: forward_filedrop
        table: nat
        rules: >-
          -A PREROUTING -p tcp --dport 8039
          -j DNAT --to-destination 127.0.0.1:8039

    - name: Create sftp directory parent
      tags: sftp
      file:
        path: "{{ sftp_home }}"
        state: directory
        owner: root
        group: root

    - name: Create sftp directory
      tags: sftp
      file:
        path: "{{ sftp_home }}/data"
        state: directory
        owner: ute
        group: ute

    - name: Create sftp user
      tags: sftp
      user:
        name: sftp
        password: "{{ vault_callisto_sftp_password }}"
        home: "{{ sftp_home }}"
        create_home: no
        shell: /usr/sbin/nologin

    - name: Set sshd sftp chroot
      tags: sftp
      blockinfile:
        marker: "# {mark} ansible callisto sftp chroot"
        path: /etc/ssh/sshd_config
        block: |
          Match User sftp
            ChrootDirectory %h
            ForceCommand internal-sftp -d data
            DisableForwarding yes
            PasswordAuthentication yes
      notify: reload sshd

    - name: Print ssh config
      tags: sftp
      debug:
        msg: |
          Host {{ inventory_hostname }}
            HostName {{ ansible_host }}
            Port {{ ansible_port }}
            User sftp
            PreferredAuthentications password
