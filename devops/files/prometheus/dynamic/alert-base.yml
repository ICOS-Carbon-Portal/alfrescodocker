# https://awesome-prometheus-alerts.grep.to/rules.html

groups:
- name: alert.rules
  rules:
  # - alert: EndpointDown
  #   expr: probe_success == 0
  #   for: 10s
  #   labels:
  #     severity: "critical"
  #   annotations:
  #     summary: "Endpoint {{ $labels.instance }} down!"

  # - alert: Borg backup late
  #   expr: borg_age_secs > (86400*2)
  #   for: 10s
  #   labels:
  #     severity: "warning"
  #   annotations:
  #     summary: "Backup of {{ $labels.name }} on {{ $labels.instance }} is late."

  - alert: RootdiskFull
    expr: >-
      (node_filesystem_avail_bytes{mountpoint="/"} * 100) / node_filesystem_size_bytes < 10
      and ON (instance, device, mountpoint)
        node_filesystem_readonly == 0
    for: 10s
    labels:
      severity: "critical"
    annotations:
      summary: "Endpoint {{ $labels.instance }} disk is full"

  - alert: HostDiskWillFillIn1Week
    expr: >-
      (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 30
      and ON (instance, device, mountpoint)
        predict_linear(node_filesystem_avail_bytes{fstype!~"tmpfs"}[1h], 7 * 24 * 3600) < 0
      and ON (instance, device, mountpoint)
        node_filesystem_readonly == 0
    # Long enough so it doesn't trigger on e.g a large rsync transfer.
    for: 180m
    labels:
      severity: warning
    annotations:
      summary: Host disk will fill in one week (instance {{ $labels.instance }})
      description: >-
        Filesystem is predicted to run out of space within the next 7*24 hours at
        current write rate\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}

  - alert: HostHighCpuLoad
    expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80
    # Long enough for computations but not cryptocoin miners.
    for: 60m
    labels:
      severity: warning
    annotations:
      summary: Host high CPU load (instance {{ $labels.instance }})
      description: >-
        CPU load is > 80%\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}

  - alert: S.M.A.R.T device not healthy
    expr: smartmon_device_smart_healthy == 0
    for: 10s
    labels:
      severity: "critical"
    annotations:
      summary: "Device {{ $labels.device }} on {{ $labels.instance }} is not healthy."
