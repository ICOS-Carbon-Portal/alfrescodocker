# deploy jupyter jupyter_jusers_deploy 

- hosts: jupyter_host
  vars:
    jupyter_ip: "{{ _lxd.addresses.eth0 | first }}"
    zvol_docker: /dev/zvol/pool/docker/jupyter
    jupyter_domains:
      - jupyter.icos-cp.eu
  vars_files:
    - vault.yml
  pre_tasks:
    - name: Create zfs filesystem for jupyter home directories
      tags:
        - zfs
        - zfshome
      zfs:
          name: pool/jupyter
          state: present
          extra_zfs_properties:
            refquota: "5T"

    - name: Create jupyter directories for home and project
      tags:
        - zfs
        - zfshome
      file:
        name: "/pool/jupyter/{{ item }}"
        state: directory
        owner: "1000000"
        group: "1000000"
      loop:
        - home
        - project

    - import_role:
        name: icos.zfsdocker
        tags:
          - zfs
          - zfsdocker
        vars:
          zfsdocker_name: jupyter
          zfsdocker_size: "100G"
          
    - name: Create the jupyter container
      tags:
        - lxd
        - forward
        - nginx
      lxd_container:
        name: jupyter
        state: started
        profiles:
          - default
          - ssh_root
          - icosdata
        source:
          type: image
          mode: pull
          server: https://cloud-images.ubuntu.com/releases
          protocol: simplestreams
          alias: "20.04"
        devices:
          root:
            path: "/"
            pool: "default"
            type: "disk"
            size: "50GB"
          docker:
            path: /var/lib/docker
            source: "{{ zvol_docker }}"
            type: disk
            raw.mount.options: user_subvol_rm_allowed
          home:
            path: /home
            source: /pool/jupyter/home
            type: "disk"
          jupyterproject:
            path: /project
            source: /pool/jupyter/project
            type: "disk"
          dataproject:
            path: /data/project
            source: /data/project
            type: "disk"
          interpolation:
            path: /data/project/interpolation
            readonly: "true"
            source: /data/project/interpolation
            type: disk
        config:
          security.nesting: "true"
        wait_for_ipv4_addresses: true
        wait_for_ipv4_interfaces: eth0
        timeout: 60
      register: _lxd

  roles:
    - role: icos.lxd_forward
      tags: forward
      lxd_forward_ip: "{{ jupyter_ip }}"
      lxd_forward_name: jupyter

    - role: icos.certbot2
      tags: cert
      certbot_name: jupyter
      certbot_domains: "{{ jupyter_domains }}"

    - role: icos.nginxsite
      tags: nginx
      nginxsite_name: jupyter
      nginxsite_file: files/jupyter.conf
      jupyter_domain: "{{ jupyter_domains | first }}"
      jupyter_cert_name: jupyter
      jupyter_port: 8000


- hosts: jupyter
  vars_files:
    - vault.yml
  handlers:
    - name: reload sshd
      systemd:
        name: sshd
        state: reloaded
        
  roles:
    - role: icos.lxd_guest
      tags: guest

    - role: icos.python3
      tags: python3
      
    - role: icos.docker
      tags: docker

    - role: icos.sshlogin
      tags: sshlogin_exploredata
      sshlogin_dst: exploredata
      sshlogin_src_user: root
      sshlogin_dst_user: root
      sshlogin_src_dst_name: exploredata
      
    - role: icos.jupyter
      tags: jupyter
      jupyter_admins: "{{ vault_jupyter_admins }}"

  tasks:
    - name: Create project user
      tags: project
      user:
        name: project
        create_home: no
        home: /data/project
        shell: /usr/bin/bash
        password: '*'

    - name: Install additional ssh keys
      tags: ssh
      authorized_key:
        user: root
        state: present
        key: "{{ vault_jupyter_ssh_keys }}"

    - name: Deny ssh login to most users
      tags: ssh
      copy:
        dest: /etc/ssh/sshd_config.d/allowusers.conf
        content: |
          AllowUsers {{ vault_jupyter_allow_users | join(" ") }}
      notify: reload sshd
