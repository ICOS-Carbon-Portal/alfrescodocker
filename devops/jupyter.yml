# Update nginx config (need lxd_host_create to get lxd_host_ip)
#   deploy jupyter -ljupyter_host lxd_host_create nginx
#
# Deploy the hub.
#   deploy jupyter -ljupyter jupyter
#
# Create authentication token
#   deploy jupyter -ljupyter jupyter_token
#
# Update the home profile
#   deploy jupyter -ljupyter_host home_profile container
#
# Install additional ssh keys
#   deploy jupyter -ljupyter keys
#
# Backup stuff
#   deploy jupyter -ljupyter_host backup
#
# Only backup script
#   deploy jupyter -ljupyter_host backup_script


- hosts: jupyter_host
  become: true
  vars:
    jupyter_data: /disk/data/jupyter
  vars_files:
    - vault.yml
  pre_tasks:
    - name: Create LXD home profile
      tags: home_profile
      lxd_profile:
        name: jupyter_home
        description: "Jupyter home directories"
        devices:
          home:
            path: /home
            source: "{{ jupyter_data }}/jupyter/home"
            type: disk
          homejupyter:
            path: /home_jupyter
            source: "{{ jupyter_data }}/jupyter/old_jupyter_from_fsicos1/jupyter/storage"
            type: disk
          homejupyter3:
            path: /home_jupyter3
            source: "{{ jupyter_data }}/jupyter/old_jupyter_from_fsicos1/jupyter3/storage"
            type: disk

    - name: Create jupyter LXD profile
      tags: profile
      lxd_profile:
        name: jupyter
        config:
          security.nesting: "true"
        devices:
          root:
            path: /
            type: disk
            pool: jupyter
          project:
            path: /data/project
            source: /data/project
            type: disk

  roles:
    - role: icos.lxd_host
      tags: container
      lxd_host_name: jupyter
      lxd_host_port: "{{ hostvars['jupyter'].ansible_port }}"
      lxd_host_profiles:
        - default
        - icosdata
        - jupyter
        - jupyter_home

    - role: icos.nginxsite
      tags: nginx
      nginxsite_name: jupyter
      nginxsite_file: files/jupyter.conf
      jupyter_domain: test.icos-cp.eu
      jupyter_cert_name: test.icos-cp.eu
      jupyter_port: 8000

    - role: icos.bbclient
      tags:
        - backup
        - bbclient
      bbclient_home: "{{ jupyter_data }}"
      bbclient_name: jupyter

  tasks:
    - name: Create backup script
      tags:
        - backup
        - backup_script
      copy:
        mode: +x
        dest: "{{ jupyter_data }}/bin/backup.sh"
        content: |
          #!/bin/bash
          PATH={{ jupyter_data }}/bin:$PATH
          set -eu
          cd {{ jupyter_data }}
          bbclient-all create "::{now}" home old_jupyter_from_fsicos1
          bbclient-all prune --keep-within 2w --keep-daily=30 --keep-weekly=150
      register: _backup_script

    - name: Add backup script to crontab
      tags:
        - backup
        - backup_script
      cron:
        job: "{{ _backup_script.dest }}"
        special_time: hourly
        state: present
        name: "jupyter_backup"

    - name: Copy sync-old-jupyter-single-user.sh
      tags: sync_script
      copy:
        src: sync-old-jupyter-single-user.sh
        dest: "{{ jupyter_data }}/bin"
        mode: +x

- hosts: jupyter
  vars_files:
    - vault.yml
  roles:
    - role: icos.lxd_guest
      tags: guest

    - role: icos.docker
      tags: docker

    - role: icos.jupyter
      tags: jupyter

  tasks:
    - name: Install additional ssh keys
      tags: keys
      authorized_key:
        user: root
        state: present
        key: "{{ vault_jupyter_ssh_keys }}"
