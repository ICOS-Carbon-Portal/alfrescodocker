#!/usr/bin/env -S just --unstable --justfile

set positional-arguments
set shell := ['/bin/bash', '-cu']

export EDITOR := env_var_or_default("EDITOR", "emacsclient --no-wait")
export ANSIBLE_INVENTORY := "production.inventory"



# META
@_default:
    just --unstable --list --unsorted --justfile {{justfile()}}

# edit this justfile
_edit:
    {{EDITOR}} {{canonicalize(justfile())}}

# create shim in order to get working directory right
@_install dest="~/.local/bin/icos":
    #!/usr/bin/bash
    set -Eueo pipefail
    cat > {{dest}} <<EOF
    #!/usr/bin/bash
    set -Eueo pipefail
    cd {{ justfile_directory() }}
    just --unstable "\$@"
    EOF
    chmod +x {{dest}}



# RECIPIES
# run a playbook
play playbook *args:
    #!/usr/bin/bash
    set -Eueo pipefail
    playbook=($(compgen -G "*{{playbook}}*.yml"))
    case "${#playbook[@]}" in
      0) echo "Error: No file matches '*{{playbook}}*'"
         exit 1
         ;;
      1) # do nothing
         ;;
      *) echo "Error: More than one file matches '*{{playbook}}*'"
         exit 1
         ;;
    esac
    shift
    ansible-playbook $playbook "$@"

# run the install playbook
install *args:
    ansible-playbook install.yml {{args}}

# install and upgrade_everything
upgrade *args:
    ansible-playbook install.yml -eupgrade_everything=1 {{args}}

# show facts about a host
facts host:
    ansible {{host}} -m setup

# edit the vault
vault:
    #!/usr/bin/bash
    set -Eueo pipefail
    case "$EDITOR" in
        (*emacsclient*)
            # strip --no-wait
            export EDITOR=emacsclient
            ;;
    esac
    ansible-vault edit group_vars/all/vault.yml



# NEBULA
mod nebula "files/nebula/justfile"
