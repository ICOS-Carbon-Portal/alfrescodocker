--- /home/andre/.local/lib/python3.8/site-packages/ansible/modules/cloud/lxd/lxd_container.py	2020-05-22 07:29:15.958235979 +0200
+++ ../lxd_container.py	2020-06-15 07:50:07.704094668 +0200
@@ -94,6 +94,15 @@
         required: false
         default: false
         type: bool
+    wait_for_ipv4_interfaces:
+        description:
+          - A list of interfaces for which C(wait_for_ipv4_addresses) will
+            wait.  This is useful if the container is running a nested docker,
+            in which case it might have interfaces which never acquires ipv4
+            addresses.
+        required: false
+        default: [] (wait for all interfaces)
+        type: list
     force_stop:
         description:
           - If this is true, the C(lxd_container) forces to stop the container
@@ -321,6 +330,7 @@
 
         self.timeout = self.module.params['timeout']
         self.wait_for_ipv4_addresses = self.module.params['wait_for_ipv4_addresses']
+        self.wait_for_ipv4_interfaces = self.module.params['wait_for_ipv4_interfaces']
         self.force_stop = self.module.params['force_stop']
         self.addresses = None
 
@@ -412,7 +422,12 @@
 
         resp_json = self._get_container_state_json()
         network = resp_json['metadata']['network'] or {}
-        network = dict((k, v) for k, v in network.items() if k not in ignore_devices) or {}
+        if self.wait_for_ipv4_interfaces:
+            network = dict((k, v) for k, v in network.items()
+                           if k in self.wait_for_ipv4_interfaces) or {}
+        else:
+            network = dict((k, v) for k, v in network.items()
+                           if k not in ignore_devices) or {}
         addresses = dict((k, [a['address'] for a in v['addresses'] if a['family'] == 'inet']) for k, v in network.items()) or {}
         return addresses
 
@@ -502,7 +517,7 @@
         if key == 'config':
             old_configs = dict((k, v) for k, v in self.old_container_json['metadata'][key].items() if not k.startswith('volatile.'))
             for k, v in self.config['config'].items():
-                if old_configs[k] != v:
+                if k not in old_configs or old_configs[k] != v:
                     return True
             return False
         else:
@@ -615,6 +630,9 @@
                 type='bool',
                 default=False
             ),
+            wait_for_ipv4_interfaces=dict(
+                type='list',
+            ),
             force_stop=dict(
                 type='bool',
                 default=False
