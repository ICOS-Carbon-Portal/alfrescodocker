--- /home/andre/.local/lib/python3.8/site-packages/ansible/../ansible_collections/community/general/plugins/modules/cloud/lxd/lxd_container.py	2022-01-12 22:24:16.480636119 +0100
+++ ../../library/lxd_container.py	2022-01-25 11:09:31.225262564 +0100
@@ -124,6 +124,15 @@
         required: false
         default: false
         type: bool
+    wait_for_ipv4_interfaces:
+        description:
+          - A list of interfaces for which C(wait_for_ipv4_addresses) will
+            wait.  This is useful if the container is running a nested docker,
+            in which case it might have interfaces which never acquires ipv4
+            addresses.
+        required: false
+        default: [] (wait for all interfaces)
+        type: list
     force_stop:
         description:
           - If this is true, the C(lxd_container) forces to stop the instance
@@ -411,6 +420,7 @@
 
         self.timeout = self.module.params['timeout']
         self.wait_for_ipv4_addresses = self.module.params['wait_for_ipv4_addresses']
+        self.wait_for_ipv4_interfaces = self.module.params['wait_for_ipv4_interfaces']
         self.force_stop = self.module.params['force_stop']
         self.addresses = None
         self.target = self.module.params['target']
@@ -522,6 +532,8 @@
         resp_json = self._get_instance_state_json()
         network = resp_json['metadata']['network'] or {}
         network = dict((k, v) for k, v in network.items() if k not in ignore_devices) or {}
+        if self.wait_for_ipv4_interfaces:
+            network = dict((k, v) for k, v in network.items() if k in self.wait_for_ipv4_interfaces)
         addresses = dict((k, [a['address'] for a in v['addresses'] if a['family'] == 'inet']) for k, v in network.items()) or {}
         return addresses
 
@@ -749,6 +761,9 @@
                 type='bool',
                 default=False
             ),
+            wait_for_ipv4_interfaces=dict(
+                type='list',
+            ),
             force_stop=dict(
                 type='bool',
                 default=False
@@ -774,16 +789,6 @@
         supports_check_mode=False,
     )
 
-    if module.params['ignore_volatile_options'] is None:
-        module.params['ignore_volatile_options'] = True
-        module.deprecate(
-            'If the keyword "volatile" is used in a playbook in the config'
-            'section, a "changed" message will appear with every run, even without a change'
-            'to the playbook.'
-            'This will change in the future. Please test your scripts'
-            'by "ignore_volatile_options: false". To keep the old behavior, set that option explicitly to "true"',
-            version='6.0.0', collection_name='community.general')
-
     lxd_manage = LXDContainerManagement(module=module)
     lxd_manage.run()
 
