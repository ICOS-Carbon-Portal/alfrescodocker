# Create users for the cplog database:
#   deploy postgis cplog

- hosts: postgis_host
  vars:
    postgis_ip: "{{ _lxd.addresses.eth0 | first }}"
  vars_files:
    - vault.yml
  tasks:
    - name: Create postgis storage pool
      tags: pool
      shell: >-
        /snap/bin/lxc storage show postgis > /dev/null 2>&1 ||
        /snap/bin/lxc storage create postgis btrfs size=20GB
      register: _r
      changed_when:
        - '"Storage pool postgis created" in _r.stdout'

    - name: Create the postgis container
      lxd_container:
        name: postgis
        state: started
        profiles:
          - default
          - ssh_root
        config:
          limits.cpu: "4"
          limits.memory: "10GB"
        source:
          type: image
          mode: pull
          server: https://cloud-images.ubuntu.com/releases
          protocol: simplestreams
          alias: "20.04"
        devices:
          root:
            path: /
            type: disk
            pool: postgis
            size: "20GB"
        wait_for_ipv4_addresses: true
      register: _lxd

    - name: SSH forward to postgis
      iptables_raw:
        name: forward_ssh_to_postgis
        table: nat
        rules: >-
          -A PREROUTING -p tcp
          --dport {{ hostvars['postgis'].ansible_port }}
          -j DNAT --to-destination {{ postgis_ip }}:22

    - name: Modify /etc/hosts
      lineinfile:
        path: /etc/hosts
        regex: '(?:^{{ postgis_ip | regex_escape}}.*)|(?:.*postgis\.lxd)$'
        line: "{{ postgis_ip }}\tpostgis.lxd"
        state: present


- hosts: postgis
  become: true
  vars_files:
    - vault.yml
  roles:
    - role: icos.lxd_guest
      tags: guest

    - role: icos.bbclient
      tags: bbclient
      bbclient_user: postgres
      bbclient_coldbackup_enable: no

    - role: icos.postgresql
      tags: postgresql
      postgresql_postgis_enable: true
      postgresql_postgres_password: "{{ vault_postgis_postgres_password }}"
      postgresql_listen_addresses: "'*'"
      postgresql_backup_script: backup-dumpall-bbclient

  tasks:
    - name: Install public keys for postgres user
      tags: keys
      authorized_key:
        user: postgres
        state: present
        key: "{{ vault_postgis_extra_keys }}"
    
    - name: Allow postgres user to connect from same subnet
      tags: hba
      postgresql_pg_hba:
        dest: "{{ postgresql_hba_file }}"
        users: postgres
        source: samenet
        method: md5
        contype: hostssl

    - become: true
      become_user: postgres
      tags: cplog
      block:
        - name: Create postgres cplog users
          postgresql_user:
            db: cplog
            name: "{{ item.username }}"
            password: "{{ item.password }}"
          loop: "{{ vault_postgis_cplog_users }}"

        - name: Allow users to connect from same subnet
          postgresql_pg_hba:
            dest: "{{ postgresql_hba_file }}"
            users: "{{ item.username }}"
            source: samenet
            method: md5
            contype: hostssl
          loop: "{{ vault_postgis_cplog_users }}"

        - name: Add the pg_stat_statements to cplog
          community.postgresql.postgresql_ext:
            name: pg_stat_statements
            db: cplog
            schema: public
