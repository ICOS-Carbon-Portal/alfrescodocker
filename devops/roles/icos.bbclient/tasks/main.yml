- import_tasks: user_name_home.yml

- name: Download borg binary
  get_url:
    url: "{{ bbclient_url }}"
    dest: "{{ bbclient_bin }}"
    checksum: "{{ bbclient_checksum }}"
    mode: +x
  notify: Test downloaded borg binary

- name: Generate RSA keys
  become_user: "{{ bbclient_user }}"
  become: true
  command: >-
    ssh-keygen -q -t rsa -f {{ bbclient_ssh_key }} -N ""
      -C "bbclient_{{ bbclient_user }}@{{ inventory_hostname }}"
  args:
    creates: "{{ bbclient_ssh_key }}"

- name: Read the public key
  slurpfact:
    path: "{{ bbclient_ssh_key }}.pub"
    fact: bbclient_key_data

- name: Create scripts directory
  file:
    path: "{{ bbclient_script_dir }}"
    state: directory

- name: Install borg wrapper that contains our ssh info
  copy:
    mode: +x
    dest: "{{ bbclient_wrapper }}"
    content: |
      #!/bin/bash
      BORG_RSH="ssh -F {{ bbclient_ssh_config }}" {{ bbclient_bin }} "$@"

- name: Read available repos
  slurpfact:
    path: "{{ bbclient_repo_file }}"
    fact: bbclient_repos
    list: true
    fail: false

- name: Check that remote is properly configured
  fail:
    msg: |
      The host "{{ bbclient_remote }}" must set the following host variables:
        bbserver_user
        bbserver_home
        bbserver_bin
        bbserver_repo_home
  when: |
    hostvars[bbclient_remote].bbserver_user is undefined or
    hostvars[bbclient_remote].bbserver_home is undefined or
    hostvars[bbclient_remote].bbserver_bin is undefined or
    hostvars[bbclient_remote].bbserver_repo_home is undefined
  loop: "{{ bbclient_remotes }}"
  loop_control:
    loop_var: bbclient_remote

- include_tasks: repo.yml
  loop: "{{ bbclient_remotes }}"
  when: bbclient_repo_url not in bbclient_repos
  loop_control:
    loop_var: bbclient_remote

- name: Create helper scripts
  template:
    src: "{{ item }}"
    dest: "{{ bbclient_script_dir }}"
    mode: +x
  loop:
    - bbclient-all
    - bbclient
