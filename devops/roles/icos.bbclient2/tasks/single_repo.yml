### REMOTE ###

- name: Configure remote - bbserver - host
  delegate_to: "{{ bbclient_remote }}"
  block:
    - name: Retrieve remote SSH IP
      become: no # without this, the env disappear
      shellfact:
        exec: echo $SSH_CONNECTION | cut -d ' ' -f 3
        fact: bbclient_remote_ip

    - name: Retrieve host keys
      become: no # without this, the env disappear
      shellfact:
        exec: ssh-keyscan localhost | sed "s/^localhost/{{ bbclient_remote_ip }}/"
        fact: bbclient_remote_keys

    - name: Install public key
      authorized_key:
        user: "{{ bbclient_remote_user }}"
        state: present
        key: "{{ bbclient_key_data }}"
        key_options: >-
          command="{{ bbclient_remote_bin }} serve --restrict-to-path {{ bbclient_remote_repo }}",restrict


### LOCAL ###

- name: Configure local - bbclient - host
  become: yes
  become_user: "{{ bbclient_user }}"
  block:
  - name: Write SSH config
    blockinfile:
      create: yes
      path: "{{ bbclient_ssh_config }}"
      marker: "# {mark} bbclient {{ bbclient_remote }}"
      block: |
        Host {{ bbclient_remote }}
          HostName {{ bbclient_remote_ip }}
          User {{ bbclient_remote_user }}
          Port {{ bbclient_remote_port }}

  - name: Update known_hosts
    blockinfile:
      create: yes
      path: "{{ bbclient_ssh_hosts }}"
      marker: "# {mark} {{ bbclient_remote }}"
      block: |
        {{ bbclient_remote_keys }}

  - name: Initialize repo
    command: |
      {{ bbclient_wrapper }} init {{ bbclient_repo_url }} --encryption=none
    register: r
    changed_when:
      - r.rc == 0
    failed_when:
      - r.rc != 0
      - not r.stderr.startswith('A repository already exists at')

  - name: Remember repo url
    lineinfile:
      path: "{{ bbclient_repo_file }}"
      line: "{{ bbclient_repo_url }}"
      state: present
      create: yes
