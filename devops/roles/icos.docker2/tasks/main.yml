# https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-22-04

# docker.io is the built-in version in ubuntu and if it's installed, docker
# might already be in use.
- name: Fail if docker.io is apt-installed
  ansible.builtin.shell: |
    dpkg --get-selections docker.io | grep -vq '\binstall'
  changed_when: false
  register: r
  failed_when: r.rc == 0

- import_tasks: debian.yml
  when: ansible_distribution == "Debian"

- import_tasks: ubuntu.yml
  when: ansible_distribution == "Ubuntu"

# docker-compose version 1 is deprecated, "docker compose" is the way.
- name: Uninstall docker-compose version 1
  apt:
    name: docker-compose
    state: absent

# https://docs.docker.com/engine/install/debian/
- name: Install docker and docker-compose
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      # Installing "docker-compose" gives us Version 1 which is EOL
      # 2023-07. Installing docker-compose-plugin gives us V2.
      - docker-compose-plugin

- name: Install docker configuration
  copy:
    src: daemon.json
    dest: /etc/docker/
  notify: reload docker

# We've just uninstalled docker-compose version 1, now we'll install it again,
# since we need the python libraries for ansible's sake.
- name: pip install docker
  pip:
    name:
      - docker
      - docker-compose
    state: present

# While we want the docker-compose _libraries_ installed for ansible's sake,
# we don't want the script itself. There doesn't seem to be a knob for that in
# pip, so just remove the executable. https://github.com/pypa/pip/issues/3980
- name: Remove /usr/local/bin/docker-compose
  file:
    name: /usr/local/bin/docker-compose
    state: absent
# A simple test that still manages to check a number of things including
# daemons, sockets, network access etc.
- name: Test that docker can pull and execute images
  shell: |
    docker run --rm alpine apk | grep -q coffee
  register: _apk
  changed_when: false

- name: Report docker status
  debug:
    msg: |
      Successfully ran an alpine image in {{ _apk.delta }}. It should take
      1-10 seconds, depending on whether the alpine image exists locally or
      not
