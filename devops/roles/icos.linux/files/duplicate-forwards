#!/usr/bin/python3

import subprocess


class Rule:

    header = ['num', 'pkts', 'bytes', 'target', 'prot', 'opt',
              'in_', 'out', 'source', 'destination', 'extra']

    def __init__(self, *args):
        for k, v in zip(self.header, args):
            setattr(self, k, v)

    def __repr__(self):
        return str({k: v for k, v in self.__dict__.items()
                    if k in self.header})



# Chain PREROUTING (policy ACCEPT 96422 packets, 5968K bytes)
# num pkts bytes target prot opt in  out  source   destination
# 1   115  7264  DNAT   tcp  --  any any  anywhere anywhere     \
#    tcp dpt:60522 to:10.189.225.89:22


def iptables_list_chain(table, chain):
    cmd = ['sudo', 'iptables',
           '-t', table, '-L', chain, '--line-numbers', '-n', '-v']
    r = subprocess.run(cmd, check=1, capture_output=1, text=1)
    for n, l in enumerate(r.stdout.splitlines()):
        if n == 0:
            assert l.startswith('Chain %s' % chain.upper())
            continue
        if n == 1:
            assert l.split() == ['num', 'pkts', 'bytes', 'target', 'prot',
                                 'opt', 'in', 'out', 'source', 'destination']
            continue
        p = l.split(None, 10)
        r = Rule(*p)
        r.num = int(r.num)
        r.pkts = int(r.pkts)
        yield r

for r in iptables_list_chain('nat', 'PREROUTING'):
    print(r)
