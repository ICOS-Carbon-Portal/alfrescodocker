- name: Check that all parameters are defined
  fail:
    msg: "{{ item }} needs to be defined"
  when: vars[item] is undefined
  loop:
    - lxd_host_name
    - lxd_host_port

- name: Create the {{ lxd_host_name }} container
  lxd_container:
    name: "{{ lxd_host_name }}"
    source:
      type: image
      mode: pull
      server: https://cloud-images.ubuntu.com/releases
      protocol: simplestreams
      alias: "18.04"
    config: "{{ lxd_host_config | default(omit) }}"
    profiles: "{{ lxd_host_profiles | default(omit) }}"
    wait_for_ipv4_addresses: true
    wait_for_ipv4_interfaces: eth0
    timeout: 30
  register: _lxd

- set_fact:
    lxd_host_ip: "{{ _lxd.addresses.eth0 | first }}"

- name: Add port forward for {{ lxd_host_name }} ssh
  blockinfile:
    marker: "# {mark} ansible / ssh to lxd {{ lxd_host_name }}"
    backup: yes
    create: no
    insertafter: EOF
    path: /etc/ufw/before.rules
    block: |
      *nat
      :PREROUTING ACCEPT [0:0]
      -A PREROUTING -p tcp --dport {{ lxd_host_port }} -j DNAT --to-destination {{ lxd_host_ip }}:22
      COMMIT
  notify: Reload UFW

- name: Allow traffic on containers external ssh port
  ufw:
    route: true
    rule: allow
    port: "'{{ lxd_host_port }}'"
    comment: "ssh to lxd {{ lxd_host_name }}"
  notify: Reload UFW

# To be able to access the container via ssh, ssh keys have to be added.
# The choices as to which keys to add are:
#   1. generate keys - either locally, on the remote machine or in the conatiner
#   2. pre-generate keys and keep as part of this role
#   3. add some other, pre-existing keys
#
# This tasks uses choice 3 and takes the authorized_keys file from a user on
# the remote machine and merges into the container. The user is typically the
# same used by ansible to deploy the container.
- name: Merge {{ lxd_host_key_file }} into the container
  shell: >-
    lxc exec {{ lxd_host_name }} -- bash -c '
    while read line; do
    grep -qFx "$line" .ssh/authorized_keys || {
    echo "$line"; echo "$line" >> .ssh/authorized_keys;
    }; done
    ' < {{ lxd_host_key_file }}
  register: r
  # Each merged key is echoed, thus we know if any were added.
  changed_when: r.stdout != ""
  when: lxd_host_key_file is defined
