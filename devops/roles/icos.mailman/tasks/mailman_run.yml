# Copy runtime configuration and start docker containers.

- name: Create mailman volumes
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ _user.uid }}"
    group: "{{ _user.group }}"
  loop:
    - "{{ mailman_volume_core }}"
    - "{{ mailman_volume_web }}"
    - "{{ mailman_volume_database }}"

- name: Generate passwords
  include_role:
    name: icos.password_env_file
  vars:
      file: "{{ item.file }}"
      set_fact: "{{ item.set_fact }}"
      file_var: "{{ item.file_var }}"
  loop:
    - file: "{{ mailman_home }}/.rest-pass"
      set_fact: mailman_rest_pass
      file_var: MAILMAN_REST_PASS

- name: Install mailman core configuration
  template:
    dest: "{{ mailman_volume_core }}"
    src: mailman-extra.cfg

- name: Install django settings file for mailman-web
  template:
    dest: "{{ mailman_volume_web }}"
    src: settings_local.py

- name: Install Makefile
  template:
    dest: "{{ mailman_home }}"
    src: Makefile

- name: Start containers
  docker_service:
    project_src: "{{ mailman_home }}"

- name: Test the REST API
  uri:
    url: "https://{{ mailman_domains | first }}/rest/3.0/domains"
    user: "{{ mailman_rest_user }}"
    password: "{{ mailman_rest_pass }}"
  register: r
  failed_when:
    - r.status != 200
    - "{{ r.json | json_query('entries[*].mail_host') | sort }} != \
       {{ mailman_domains | sort }}"
  # Give Mailman a chance to come online.
  retries: 2
  delay: 10
  until: not rc.failed
