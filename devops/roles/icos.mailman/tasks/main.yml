- name: Create directories
  file:
    path: "{{ mailman_home }}/build/mailman-core"
    state: directory

- name: Copy mailman files
  template:
    dest: "{{ item.dest }}"
    src: "{{ item.src }}"
    mode: "{{ item.mode | default(omit) }}"
  loop:
    - dest: "{{ mailman_home }}/"
      src: docker-compose.yml
      mode: "0600"
    - dest: "{{ mailman_home }}"
      src: logrotate.conf
    - dest: "{{ mailman_home }}"
      src: bbclient-down-hook
      mode: +x
    - dest: "{{ mailman_volume_core }}"
      src: mailman-extra.cfg
    - dest: "{{ mailman_volume_web }}"
      src: settings_local.py
    - dest: "{{ mailman_home }}/build/mailman-core/Dockerfile"
      src: Dockerfile.core
    - dest: "{{ mailman_home }}/build/mailman-core/"
      src: 932.diff
    - dest: "{{ mailman_home }}/build/mailman-core/"
      src: 933.diff
  register: _files

- name: Install cli wrappers
  template:
    dest: /usr/local/sbin
    src: "{{ item }}"
    mode: +x
  loop:
    - mailman
    - mailman-web
    - mailman-psql

- name: Install Makefile
  blockinfile:
    create: yes
    marker: "# {mark} ansible / icos.mailman"
    path: "{{ mailman_home }}/Makefile"
    block: "{{ lookup('template', 'Makefile') }}"

- name: Start containers
  docker_compose:
    project_src: "{{ mailman_home }}"
    restarted: "{{ _files.changed }}"

- name: Test the REST API
  uri:
    url: "https://{{ mailman_domains | first }}/rest/3.0/domains"
    user: "{{ mailman_rest_user }}"
    password: "{{ mailman_rest_pass }}"
  register: r
  failed_when:
    - r.status != 200
    - "r.json | json_query('entries[*].mail_host') | sort != mailman_domains | sort"
  retries: 10
  delay: 20
  until: not r.failed

- name: Set postfix parameters
  postconf:
    param: "{{ item.param }}"
    value: "{{ item.value }}"
    append: "{{ item.append | default(omit) }}"
  loop: "{{ mailman_postfix_config }}"
