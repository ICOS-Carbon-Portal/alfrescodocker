server {
    listen 443 ssl;
    server_name {{ mailman_domains | join(" ") }};

    {{ certbot_nginx_conf | indent(4) }}

    access_log /var/log/nginx/mailman.log;

    {% if mailman_rest_allow_deny -%}
    location /rest/ {
        {{ mailman_rest_allow_deny | indent(8) }}

        # Strip the leading /rest from the URL before mailman sees it.
        rewrite ^/rest(/.*)$ $1 break;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;

        proxy_pass http://172.19.199.2:8001;

        # Mailman will return a field called self_link which will
        # contain its internal docker ip etc. This field will then be
        # used by the official mailman python API and everyone will be
        # very sad. Thus we rewrite the response body.
        sub_filter '"self_link": "http://{{ mailman_core_ipv4}}:{{ mailman_rest_port }}/' '"self_link": "https://$server_name/rest/';

        # If mailman decides to return a compressed response, then the
        # above would not work.
        proxy_set_header Accept-Encoding "";
        sub_filter_once off;

        # Per default nginx will only rewrite "text/html".
        sub_filter_types application/json;
    }
    {% endif %}

    location /static/ {
        alias "{{ mailman_volume_web }}/static/";
    }

    location = / {
        return 301 https://$server_name/postorius/lists/;
    }

    location / {
        include uwsgi_params;
        uwsgi_pass {{ mailman_web_ipv4 }}:8080;
        uwsgi_read_timeout 300;
    }
}

server {
        listen 80;
        server_name  {{ mailman_domains | join(" ") }};

        return 301 https://$server_name$request_uri;
}
