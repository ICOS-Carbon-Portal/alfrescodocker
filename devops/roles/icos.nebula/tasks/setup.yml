- name: Create nebula user
  user:
    name: "{{ nebula_user }}"
    shell: /usr/sbin/nologin
    system: true
    create_home: no

- name: Create etc directory
  file:
    path: "{{ nebula_etc_dir }}"
    owner: "{{ nebula_user }}"
    group: "{{ nebula_user }}"
    state: directory
    mode: 0700

- name: Check whether nebula is already installed
  stat:
    path: "{{ nebula_bin_dir }}/nebula"
  register: _r

- name: Download and unpack nebula
  include_tasks: download.yml
  when: not _r.stat.exists or nebula_upgrade
  
- name: Check that nebula runs
  shell: |
    {{ nebula_bin_dir }}/{{ item }} -version
  changed_when: no
  register: version
  loop:
    - nebula
    - nebula-cert

- name: Inform about installed version
  run_once: true
  debug:
    msg: |
      We've installed nebula {{ version.results[0].stdout_lines[0] }}

- name: Generate admin ssh key
  command: >-
    ssh-keygen -q -t ed25519
      -f {{ nebula_ssh_key }}
      -C "nebula admin on {{ nebula_hostname }}" -N ""
  args:
    creates: "{{ nebula_etc_dir }}/admin"

- name: Copy certificates and keys
  copy:
    src: "{{ nebula_cert_files }}/{{ item.src }}"
    dest: "{{ nebula_etc_dir }}/{{ item.dest }}"
  loop:
    - src: ca.crt
      dest: ca.crt
    - src: "{{ nebula_hostname }}.crt"
      dest: host.crt
    - src: "{{ nebula_hostname }}.key"
      dest: host.key
    
- import_tasks: iptables.yml
  tags: nebula_iptables

- import_tasks: just.yml
  tags: nebula_just

    
