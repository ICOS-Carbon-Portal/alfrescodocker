- name: Create nextcloud user
  user:
    name: "{{ nextcloud_user }}"
    state: present
    create_home: yes
    home: "{{ nextcloud_home }}"
  register: _user

- include_role:
    name: icos.password_env_file
  vars:
      file: "{{ item.file }}"
      set_fact: "{{ item.set_fact }}"
      file_var: "{{ item.file_var }}"
  loop:
    - file: "{{ nextcloud_home }}/.pg-root-pass"
      set_fact: nextcloud_db_root_pass
      file_var: POSTGRES_PASSWORD
    - file: "{{ nextcloud_home }}/.pg-nextcloud-pass"
      set_fact: nextcloud_db_pass
      file_var: NEXTCLOUD_PASSWORD
    - file: "{{ nextcloud_home }}/.nextcloud-admin-pass"
      set_fact: nextcloud_admin_password
      file_var: NEXTCLOUD_ADMIN_PASSWORD

- name: Copy runtime files
  template:
    src: "{{ item.name }}"
    dest: "{{ nextcloud_home }}/{{ item.name }}"
    mode: "{{ item.mode | default(omit) }}"
  loop:
    - { name: occ, mode: +x }
    - { name: nextcloud.env, mode: o-r }
    - { name: postgres.env, mode: o-r }

- name: Create nextcloud volumes
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ _user.uid }}"
    group: "{{ _user.group }}"
  loop:
    - "{{ nextcloud_volume_nextcloud }}"
    - "{{ nextcloud_volume_postgres }}"

- name: Create build directories
  file:
    path: "{{ item }}"
    state: directory
    mode: o-r
  loop:
    - "{{ nextcloud_build_nextcloud }}"
    - "{{ nextcloud_build_postgres }}"

- name: Copy build files
  template:
    dest: "{{ item.dest }}"
    src: "{{ item.src }}"
  loop:
    - src: Dockerfile_nextcloud
      dest: "{{ nextcloud_build_nextcloud }}/Dockerfile"
    - src: run_more_php_processes.diff
      dest: "{{ nextcloud_build_nextcloud }}"
    - src: Dockerfile_postgres
      dest: "{{ nextcloud_build_postgres }}/Dockerfile"
    - src: init.sql
      dest: "{{ nextcloud_build_postgres }}/init.sql"

- name: Copy docker-compose.yml
  template:
    src: docker-compose.yml
    dest: "{{ nextcloud_home }}"

- name: Build nextcloud images using docker-compose
  shell: |
    set -o pipefail
    ( echo -n '=== starting build '; date; docker-compose build --pull) \
    | tee -a build.log
  args:
    chdir: "{{ nextcloud_home }}"
    executable: /bin/bash
  register: _output
  changed_when: '" ---> Running in " in _output.stdout'
  when: nextcloud_docker_build | default(True)

- include_role: name=icos.certbot
  when: nextcloud_certbot_enable | default(True)

- name: Copy nextcloud nginx config files
  template:
    src: "{{ item }}"
    dest: "/etc/nginx/conf.d/{{ item }}"
  loop:
    - nextcloud.conf
    - nextcloud-nextcloud.inc
  notify: reload nginx config
