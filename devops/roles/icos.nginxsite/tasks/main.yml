- name: Create certificates
  tags: nginxsite_cert
  include_role:
    name: icos.certbot2
    apply: {tags: nginxsite_cert}
    public: yes
  vars:
    certbot_name: "{{ nginxsite_name }}"
    certbot_domains: "{{ nginxsite_domains }}"
  when: nginxsite_domains is defined

- name: Create basic auth users
  tags: nginxsite_users
  include_role:
    name: icos.nginxauth
    apply: {tags: nginxsite_users}
    public: yes
  vars:
    nginxauth_name: "{{ nginxsite_name }}"
    nginxauth_users: "{{ nginxsite_users }}"
  when: nginxsite_users is defined

- block:
    - name: Copy config
      template:
        src: "{{ nginxsite_file }}"
        dest: "{{ nginxsite_path_confd }}"
        backup: true
      register: update

    - name: Remove old config file from sites-available
      file:
        dest: "{{ nginxsite_path_available }}"
        state: absent

    - name: Remove old symlink sites-enabled
      file:
        dest: "{{ nginxsite_path_enable }}"
        state: absent

    - name: Check syntax
      shell: nginx -t
      changed_when: no

    - name: Reload nginx
      systemd:
        name: nginx
        state: reloaded
      changed_when: no

  rescue:
    - name: Restore old config
      copy:
        remote_src: yes
        dest: "{{ update.dest }}"
        src: "{{ update.backup_file }}"
      when: update.backup_file is defined

    - name: Remove broken config
      file:
        path: "{{ update.dest }}"
        state: absent
      when: update.backup_file is not defined

  always:
    - name: Remove backup file
      file:
        path: "{{ update.backup_file }}"
        state: absent
      changed_when: no
      when: update.backup_file is defined
