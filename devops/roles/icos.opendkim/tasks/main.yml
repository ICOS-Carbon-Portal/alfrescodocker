# http://www.opendkim.org/opendkim.conf.5.html
# http://www.opendkim.org/opendkim-README
# https://help.ubuntu.com/community/Postfix/DKIM
# https://datacadamia.com/marketing/email/postfix/opendkim
# https://www.linuxbabe.com/mail-server/setting-up-dkim-and-spf

- name: Install opendkim
  apt:
    name:
      - opendkim
      - opendkim-tools

- name: Create keys directory
  file:
    path: "{{ opendkim_keys }}"
    mode: 0700
    state: directory
    owner: "{{ opendkim_user }}"
    group: "{{ opendkim_user }}"

- name: Create opendkim.conf
  template:
    dest: /etc/opendkim.conf
    src: opendkim.conf
    lstrip_blocks: yes
  notify: Restart opendkim

- name: Create config files
  template:
    dest: /etc/opendkim
    src: "{{ item }}"
    lstrip_blocks: yes
  loop:
    - signing.table
    - keys.table
    - trusted.hosts
  notify: Restart opendkim

- name: Create key directory for domain
  file:
    path: "{{ opendkim_keys }}/{{ item }}"
    state: directory
    owner: "{{ opendkim_user }}"
    group: "{{ opendkim_user }}"
  loop: "{{ opendkim_domains }}"

# The setup of domain keys requires a manual step, adding the DNS record.
# Thus we configured domain keys in two steps:
#
# First we create keys for all configured opendkim_domains and output
# instructions about which DNS records to create.
#
# Once DNS records has been added for a domain, that domain can be added to
# opendkim_testkeys. For domains in opendkim_testkeys we do not output
# instructions about DNS records but instead run opendkim_testkeys(1).
- name: Create domain keys
  become: yes
  become_user: "{{ opendkim_user }}"
  command: >-
    opendkim-genkey -b 2048 -d {{ item }} -s default -v &&
    chmod 600 default.private
  args:
    chdir: "{{ opendkim_keys }}/{{ item }}"
    creates: default.private
  loop: "{{ opendkim_domains }}"

- name: Find domain keys that needs to be added to DNS
  ansible.builtin.shell: >-
    for d in {{ opendkim_domains | difference(opendkim_domains_testkeys) | join(" ") }}; do
      echo -n "default._domainkey $d ";
      cat {{ opendkim_keys }}/$d/default.txt | sed -n 'N;N;s/.*( //g;s/\x0A/ /g;s/).*//g;s/"[[:blank:]]*"//g;s/"//g;p';
    done
  register: _r
  changed_when: no
  when: opendkim_domains | difference(opendkim_domains_testkeys)

- name: Print instructions about adding DNS records
  debug:
    msg: |
      Create the following DNS records:
      "{{ _r.stdout }}"
  when: opendkim_domains | difference(opendkim_domains_testkeys)

- name: Run opendkim-testkey on keys that have been added to DNS
  command: opendkim-testkey -d {{ item }} -s default -vvv
  changed_when: no
  loop: "{{ opendkim_domains_testkeys }}"

- name: Create socket directory
  file:
    path: "{{ opendkim_sock | dirname }}"
    state: directory
    owner: opendkim
    group: postfix

- name: Configure postfix
  postconf:
    param: "{{ item.param }}"
    value: "{{ item.value }}"
    append: "{{ item.append | default(omit) }}"
  loop:
    - param: smtpd_milters
      value: local:opendkim/opendkim.sock
      append: True
    - param: non_smtpd_milters
      value: $smtpd_milters
  notify: Restart postfix

- name: Add postfix to the opendkim group
  user:
    name: postfix
    append: true
    groups:
      - opendkim
  notify: Restart postfix
