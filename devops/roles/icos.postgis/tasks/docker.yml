- name: Ensure the postgis PostgreSQL container is present
  community.general.docker_container:
    name: "{{ postgis_container_name }}"
    image: postgres:{{ postgis_postgres_version }}
    state: started
    recreate: no
    shm_size: 500M
    env:
      POSTGRES_USER: "{{ postgis_db_user }}"
      POSTGRES_PASSWORD: "{{ postgis_db_pass }}"
      POSTGRES_DB: "{{ postgis_db_name }}"
    published_ports:
      - 127.0.0.1:{{ postgis_db_port }}:5432
    volumes:
      - "{{ postgis_container_name }}:/var/lib/postgresql/data"
    restart_policy: always

# - name: Debug postgis password
#   ansible.builtin.debug:
#     msg: Password for user "{{ postgis_db_user }}" was "{{ postgis_db_pass }}", main db was "{{ postgis_db_name }}, port "{{ postgis_db_port}}"

- name: Wait for postgis PostgreSQL to become available
  wait_for:
    host: 127.0.0.1
    port: "{{ postgis_db_port }}"
    delay: 5
    timeout: 60

- name: Install postgis using apt-get
  community.docker.docker_container_exec:
    container: "{{ postgis_container_name }}"
    command: /bin/bash -c "apt-get update && apt-get -y install {{ postgis_package }}"
    chdir: /root

- name: Install psycopg2 for Ansible to be able to create postgresql dbs and users
  pip: name=psycopg2-binary
  become: yes

- name: Create postgis databases
  postgresql_db:
    name: "{{ item }}"
    login_user: "{{ postgis_db_user }}"
    login_password: "{{ postgis_db_pass }}"
    login_host: 127.0.0.1
    login_port: "{{ postgis_db_port }}"
    maintenance_db: "{{ postgis_db_name }}"
  loop: "{{ postgis_dbs }}"

- name: Create users in each postgis database
  include_tasks: users.yml
  loop: "{{ postgis_dbs }}"
  loop_control:
    loop_var: db_name
