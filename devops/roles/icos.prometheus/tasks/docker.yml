- name: Check that all parameters are defined
  fail:
    msg: "{{ item }} needs to be defined"
  when: vars[item] is undefined
  loop:
    - prometheus_graf_pass

- name: Create bind-mount directories
  file:
    path: "{{ item.path }}"
    state: directory
    # The prometheus and grafana images won't change uid/gid in their
    # entrypoint, and require uid/gid to already match.
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
  loop:
    - path: "{{ prometheus_data }}"
      owner: "65534"
    - path: "{{ prometheus_fsdc }}"
      owner: "65534"
    - path: "{{ prometheus_home }}/grafana_data"
      owner: "472"
    - path: "{{ prometheus_home }}/grafana_conf"
      owner: "472"

- name: Copy files
  copy:
    src: "{{ item }}"
    dest: "{{ prometheus_home }}"
  loop:
    - docker-compose.yml
    - alertmanager
    - prometheus.yml
    - provisioning

- name: Create grafana.env
  copy:
    dest: "{{ prometheus_home }}/grafana.env"
    content: |
      GF_SECURITY_ADMIN_USER=admin
      GF_SECURITY_ADMIN_PASSWORD={{ prometheus_graf_pass }}
      GF_USERS_ALLOW_SIGN_UP=false


- name: Save information about current images
  shell: |
    (echo "# $(date -Iseconds) about to pull/restart";
     docker-compose images) >> images.log
  args:
    chdir: "{{ prometheus_home }}"
  changed_when: false


- name: Build and start
  docker_compose:
    project_src: "{{ prometheus_home }}"
    pull: yes
    restarted: yes
