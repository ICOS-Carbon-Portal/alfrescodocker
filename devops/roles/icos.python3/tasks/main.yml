# First install pip and venv for the system version of python. This is for the
# sake of later ansible modules.
- name: Install pip and venv
  apt:
    # This role is included by icos.*_guest, and as such is often the first to
    # run on a system.
    update_cache: true
    name:
      - python3-pip
      - python3-virtualenv
      - python3-venv

# Install pipx using ansible's python. This will allow us to use the ansible
# pipx module to install utils written in python.
- name: Install pipx
  pip:
    name: pipx
    virtualenv: /opt/pipx/.venv
    state: "{{ 'latest' if pipx_upgrade else 'present' }}"

- name: Create pipx cli wrapper
  copy:
    dest: /usr/local/bin/pipx
    mode: +x
    content: |
      #!/usr/bin/bash
      /opt/pipx/.venv/bin/pipx "$@"

- name: Create "global" version of pipx cli wrapper
  copy:
    dest: /usr/local/sbin/pipx-global
    mode: +x
    content: |
      #!/usr/bin/bash
      PIPX_HOME=/opt/pipx PIPX_BIN_DIR=/usr/local/bin /opt/pipx/.venv/bin/pipx "$@"

# We'll install extra versions of python from here.
- name: Add ppa:deadsnakes repository
  apt_repository:
    repo: ppa:deadsnakes/ppa
  when: ansible_distribution == "Ubuntu"

# Any versions that doesn't match the built-in version
- name: Install extra version of python
  apt:
    name: "python{{ _version }}-venv"
  when: _builtin_version != _version
  loop: "{{ python3_version_list }}"
  loop_control:
    loop_var: _version
  vars:
    _builtin_version: >-
      {{ ansible_python.version.major }}.{{ ansible_python.version.minor }}
