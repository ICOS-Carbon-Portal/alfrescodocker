- name: Create the QuinCe container
  lxd_container:
    name: "{{ quince_lxd_name }}"
    state: started
    source:
      type: image
      mode: pull
      server: https://cloud-images.ubuntu.com/releases
      protocol: simplestreams
      alias: "18.04"
    config:
      security.nesting: "true"
    wait_for_ipv4_addresses: true
    timeout: 600
  register: _lxd_quince

- set_fact:
    quince_int_ip: "{{ _lxd_quince.addresses.eth0 | first }}"

# Make sure that we don't lock ourselves out of the remote machine.
- name: Allowing inbound SSH
  ufw:
    rule: allow
    port: ssh
    comment: ssh

- name: Enable UFW
  ufw:
    state: enabled

- name: Enable IP forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    sysctl_set: yes

- name: Add port forward for QuinCe ssh
  blockinfile:
    marker: "# {mark} ansible / quince ssh"
    create: no
    insertafter: ^\*nat$
    path: /etc/ufw/before.rules
    block: |
      *nat
      :PREROUTING ACCEPT [0:0]
      -A PREROUTING -p tcp --dport {{ quince_ext_port }} -j DNAT --to-destination {{ quince_int_ip }}:22
      COMMIT
  notify: Reload UFW

- name: Allow traffic on QuinCe's external ssh port
  ufw:
    route: true
    rule: allow
    port: "'{{ quince_ext_port }}'"
    comment: "quince external ssh"
  notify: Reload UFW

# To be able to access the container via ssh, ssh keys have to be added.
# The choices as to which keys to add are:
#   1. generate keys - either locally, on the remote machine or in the conatiner
#   2. pre-generate keys and keep as part of this role
#   3. add some other, pre-existing keys
#
# This tasks uses choice 3 and takes the authorized_keys file from a user on
# the remote machine and merges into the container. The user is typically the
# same used by ansible to deploy the container.
- name: Merge {{ quince_key_file }} into the quince container
  shell: >-
    lxc exec {{ quince_lxd_name }} -- bash -c '
    while read line; do
    grep -qFx "$line" .ssh/authorized_keys || {
    echo "$line"; echo "$line" >> .ssh/authorized_keys;
    }; done
    ' < {{ quince_key_file }}
  register: r
  # Each merged key is echoed, thus we know if any were added.
  changed_when: r.stdout != ""
  when: quince_key_file is defined
