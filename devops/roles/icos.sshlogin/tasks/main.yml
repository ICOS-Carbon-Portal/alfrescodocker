- name: Check that enough parameters are provided
  fail:
    msg: "Must set either sshlogin_user or both of sshlogin_src_user and sshlogin_dst_user"
  when: >-
    not (sshlogin_user is defined or
        (sshlogin_src_user is defined and sshlogin_dst_user is defined))

- name: Use sshlogin_user to derive sshlogin_{src,dst}_user
  when: sshlogin_user is defined
  set_fact:
    sshlogin_src_user: "{{ sshlogin_user }}"
    sshlogin_dst_user: "{{ sshlogin_user }}"

- name: Check that all parameters are defined
  fail:
    msg: "{{ item }} needs to be defined"
  when: vars[item] is undefined
  loop:
    - sshlogin_dst
    - sshlogin_src_user
    - sshlogin_dst_user


# SRC - Create user and directories
- name: Create {{ sshlogin_src_user }} user
  user:
    name: "{{ sshlogin_src_user }}"
    home: "{{ sshlogin_src_home }}"
    generate_ssh_key: yes
  register: _src_user


# DST - Retrieve IP and host keys
- delegate_to: "{{ sshlogin_dst }}"
  name: Retrieve destination host keys
  shellfact:
    exec: ssh-keyscan localhost | sed "s/^localhost/{{ sshlogin_dst }}/"
    fact: sshlogin_dst_host_keys


# SRC - Add known_hosts and generate key
- become: yes
  become_user: "{{ sshlogin_src_user }}"
  block:
    - name: Update known_hosts
      known_hosts:
        path: "{{ sshlogin_src_known_hosts }}"
        name: "{{ sshlogin_src_dst }}"
        key: "{{ item }}"
      loop: |-
        {{ sshlogin_dst_host_keys.strip().split('\n') }}

    - name: Add ssh config
      blockinfile:
        marker: "# {mark} ansible / sshlogin {{ sshlogin_dst }}"
        create: yes
        path: "{{ sshlogin_src_ssh_config }}"
        block: |
          Host {{ sshlogin_src_dst_name }}
            Hostname {{ sshlogin_src_dst_host }}
            Port {{ sshlogin_src_dst_port }}
            User {{ sshlogin_dst_user }}


# DST - Add key
- delegate_to: "{{ sshlogin_dst }}"
  block:
    - name: Create destination user
      user:
        name: "{{ sshlogin_dst_user }}"
        home: "{{ sshlogin_dst_home | default(omit) }}"
      register: _dst_user

    - name: Install public key
      authorized_key:
        user: "{{ sshlogin_dst_user }}"
        state: present
        key: "{{ _src_user.ssh_public_key }}"
        key_options: "{{ sshlogin_dst_key_options }}"
