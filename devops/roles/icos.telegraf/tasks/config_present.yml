- block:
    - name: Create telegraf config file
      copy:
        dest: "{{ telegraf_config_root }}/{{ telegraf_config_file }}"
        content: "{{ telegraf_config }}"
        backup: true
      register: update

    - name: Run validation
      # redirect stdout to /dev/null since it will contain the metrics (which
      # can be a lot of lines); stderr will contain the messages.
      shell: telegraf --test --config {{ update.dest }} > /dev/null
      register: test
      changed_when: update.changed
      failed_when:
        - test.failed
        # If we run test on a config file containing agent-only config, it'll
        # fail because it has no inputs!
        - test.stderr.find('no inputs found') < 0
      notify: reload telegraf

  rescue:
    - name: Slurp failed file and add line numbers
      command: cat -n {{ update.dest }}
      changed_when: no
      register: _slurp

    - name: Restore config file
      copy:
         remote_src: true
         dest: "{{ update.dest }}"
         src: "{{ update.backup_file }}"

    - name: Dump failed configuration
      debug:
        msg: "{{ _slurp.stdout }}"

    - name: Fail
      fail:
        msg: "Telegraf config file is broken"

  always:
    - name: Remove backup file
      file:
        name: "{{ update.backup_file }}"
        state: absent
      when: "update['backup_file'] is defined"

- name: Make sure telegraf is started
  systemd:
    name: telegraf
    enabled: yes
    state: started
