- when: uv_version is not defined
  run_once: true
  check_mode: false
  delegate_to: localhost
  delegate_facts: true
  block:
  - name: Find the latest release of uv
    github_release:
      user: astral-sh
      repo: uv
      action: latest_release
    register: gh

  - name: Set uv_version fact
    set_fact:
      uv_version: "{{ gh.tag.lstrip('v') }}"
      cacheable: true

- name: Install uv
  unarchive:
    owner: root
    group: root
    remote_src: true
    src: "{{ uv_url_map[uv_architecture] }}"
    # Only two binaries, uv and uvx
    dest: /usr/local/bin
    extra_opts:
      # don't preserve ownership
      - --no-same-owner
      # strip outer directory
      - "--strip-components=1"

- name: Check that uv is executable and the correct version
  shell: uv version
  changed_when: no
  register: _r
  failed_when: "not _r.stdout.endswith(uv_version)"

- name: Which version of uv was installed
  debug:
    msg: "Installed {{ uv_version }}"
