<?php


function alfresco_reader_block_info() {
	$blocks = array();
	
	$blocks['alfresco_reader'] = array(
			'info' => t('Alfresco reader'),
	);

	return $blocks;
}


function alfresco_reader_block_view($delta = '') {

	if ($delta == 'alfresco_reader') {

		$folderIdList = array();
		$objectIdList = '';
		if (variable_get('alfresco_reader_objectid_list')) {
			$folderIdList = explode(',', variable_get('alfresco_reader_objectid_list'));
		}
		
		$formatted = '';

		foreach ($folderIdList as $folderId) {
			$id = trim($folderId);
			if (! empty($id)) {
				$properties = getCMISObjectProperties($id);
				$contents = getCMISSubObjects($id);
				$formatted .= build($properties, $contents);
			}
		}

		$block = array(
			'subject' => t(''),
			'content' => array(
				'#markup' => t($formatted),
				'#attached' => array(
					'css' => array('https://static.icos-cp.eu/constant/bootstrap/3.3.4/css/bootstrap.min.css', drupal_get_path('module', 'alfresco_reader') . '/alfresco_reader.css'),
					'js' => array('https://static.icos-cp.eu/constant/bootstrap/3.3.4/js/bootstrap.min.js', drupal_get_path('module', 'alfresco_reader') . '/alfresco_reader.js'),
				),
			),
		);
		return $block;
	}

}


function build($properties, $contents) {
	$output = '<div class="alfresco_reader">';
	$output .= '<h4 class"alfresco_reader_title">' . $properties->properties['cmis:name'] . '</h4>';

	$output .= '<table class="table table-hover table-responsive">';
	$output .= '<tr>';
	$output .= '<th>Document</th>';
	$output .= '<th>Modified by</th>';
	$output .= '<th>Last modified</th>';
	$output .= '</tr>';

	foreach ($contents as $content) {
		if ($content->properties['cmis:baseTypeId'] != 'cmis:folder') {
			$document = trim($content->properties['cmis:name']);
			$document = str_replace('_', ' ', $document);

			$modifiedBy = $content->properties['cmis:lastModifiedBy'];
			$modifiedBy = str_replace('.', ' ', $modifiedBy );

			$modificationDate = new DateTime($content->properties['cmis:lastModificationDate']);

			$output .= '<tr>';
			$output .= '<td>' . l($document, 'cmis/browser', array('query' => array('id' => $content->properties['cmis:objectId']))) . '</td>';
			$output .= '<td>' . $modifiedBy . '</td>';
			$output .= '<td>' . $modificationDate->format('Y-m-d H:i') . '</td>';
			$output .= '</tr>';
		}		
	}	
	
	$output .= '</table>';
	$output .= '</div>';
	
	return $output;
}


function getCMISObjectProperties($objectId) {
	module_load_include('api.inc', 'cmis');
	
	try {
		$repository = cmisapi_getRepositoryInfo();
		$properties = cmisapi_getProperties($repository->repositoryId, $objectId);

		return $properties;		

	} catch (CMISException $e) {
		cmis_error_handler('cmis_query', $e);
	}	
}


function getCMISSubObjects($objectId) {
	module_load_include('api.inc', 'cmis');

	try {
		$repository = cmisapi_getRepositoryInfo();
		$repoId = !empty ($repository->repositoryId) ? $repository->repositoryId : 'default';	
		$objects = cmisapi_getChildren($repoId, $objectId)->objectList;

		return $objects;
		
	} catch (CMISException $e) {
		cmis_error_handler('cmis_query', $e);
	}		
}


function alfresco_reader_menu() {
	$items = array();

	$items['alfresco_reader'] = array(
			'title' => 'Alfresco reader configuration',
			'description' => 'Configuration for Alfresco reader',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('alfresco_reader_form'),
			'access arguments' => array('access administration pages'),
			'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}


function alfresco_reader_form($form, &$form_state) {

	$objectIdList = '';
	if (variable_get('alfresco_reader_objectid_list')) {
		$objectIdList = variable_get('alfresco_reader_objectid_list');
	}
	
	$form['alfresco_reader_objectid_list'] = array(
			'#type' => 'textarea',
			'#title' => t('Assign a comma separated list of folder id\'s.'),
			'#description' => t('Insert a comma separated list of id\'s of the Alfresco folders you want to list contents from.<br/>If there are some issues you will be noticed when you display the page.'),
			'#required' => FALSE,
			'#default_value' => $objectIdList,
	);

	return system_settings_form($form);
}
