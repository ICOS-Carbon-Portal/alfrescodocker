<?php
include ('Node.php');

function site_map_block_info() {

	$blocks = array();
	
	$blocks['site_map'] = array(
			'info' => t('Site map'),
	);

	return $blocks;	
}


function site_map_block_view($delta = '') {

	if ($delta == 'site_map') {

		$collected_nodes = _collect_nodes();

		$block = array(
			'subject' => t(''),
			'content' => array(
				'#markup' => t(_build($collected_nodes)),
				'#attached' => array(
					'css' => array(drupal_get_path('module', 'site_map') . '/site_map.css'),
					'js' => array(drupal_get_path('module', 'site_map') . '/site_map.js'),
				),
			),
		);

		$title_color = '#0A96F0';
		if (variable_get('broscience_style_contents_title_color')) {
			$title_color = variable_get('broscience_style_contents_title_color');
		}

		$element_color = '#0A96F0';
		if (variable_get('broscience_style_contents_element_color')) {
			$element_color = variable_get('broscience_style_contents_element_color');
		}

		drupal_add_js(array('site_map' => array('title_color' => $title_color, 'element_color' => $element_color)), 'setting');

		return $block;
	}
}


function _build($collected_nodes) {

	$output = '<div id="cp_site_map">';

	foreach ($collected_nodes as $node) {

		if ($node->getParentId() == '0') {
			$node->setSortOrder($node->getWeight() + 50);

		} else {
			$node->setSortOrder($node->getParentId() . ',' . $node->getWeight());
		}
	}

	usort($collected_nodes, '_sort_nodes');
	$nodes = array_reverse($collected_nodes);

	foreach ($nodes as $node) {
		$output .= '<span class="cp_site_map_element" cp_link_path="' . $node->getLinkPath() . '" cp_title="' . $node->getTitle() . '" cp_node="' . $node->getId() . '" cp_parent_node="' . $node->getParentId() . '" cp_has_children="' . $node->getHasChildren() . '" cp_sort_order="' . $node->getSortOrder() . '"> ' . $node->getTitle() . ' </span>';
	}

	$output .= '</div>';

	return $output;
}


function _collect_nodes() {

	$list = array();

	$result = db_query('
			select ml.link_title, ml.mlid, ml.plid, ml.link_path, ml.weight, ml.has_children
			from {menu_links} ml
			where ml.menu_name = :menu_name
			and ml.external = 0
			',

		array(':menu_name' => 'main-menu')
	)->fetchAll();


	foreach ($result as $record) {
		if ($record) {
			$node = new Node();
			$node->setTitle($record->link_title);
			$node->setId($record->mlid);
			$node->setParentId($record->plid);
			$node->setLinkPath($record->link_path);
			$node->setWeight($record->weight);
			$node->setHasChildren($record->has_children);

			$list[] = $node;
		}
	}

	return $list;
}


function _sort_nodes($a, $b) {

	if ($a->getId() == $b->getId()) { return 0; }

	if ($a->getSortOrder() == $b->getSortOrder()) {
		return $a->getId() > $b->getId() ? 1 : -1;

	} else {
		return $a->getSortOrder() < $b->getSortOrder() ? 1 : -1;
	}
}
